---
title: "Priority Analysis Visualizations"
author: "Kate Houston"
format: 
  html:
    self-contained: True
editor: visual
---

## Priority Analysis Visualizations

```{r}
library(tidyverse)
library(readr)
library(colorspace)    ## adjust colors
library(ggforce)       ## sina plots
library(ggdist)        ## halfeye plots
library(ggridges)      ## ridgeline plots
library(ggbeeswarm)    ## beeswarm plots
library(gghalves)      ## off-set jitter
library(systemfonts)   ## custom fonts
```

```{r}
results <- read_csv("results/priority_results.csv", show_col_types = FALSE)
data <- read_csv("data/cleaned_full_class_data.csv", show_col_types = FALSE)
results
```

```{r}
p_val_anova <- subset(results, test == 'ANOVA')[['p_value']]
p_val_anova
```

```{r}
data |> 
  mutate(priority = factor(priority, 
                           levels = c("P", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) |> 
  ggplot(
    aes(
      x = priority,
      y = secs_to_arrv / 60,
      color = priority,
      fill = priority
    )
  ) + 
  geom_boxplot(alpha = 0.1) +
  coord_cartesian(ylim = c(0, 180)) +  # optional: restrict y-axis instead
  scale_y_continuous(breaks = seq(0, 180, by = 20)) +
  labs(
    title = 'Call-to-Arrival Times by Call Priority',
    subtitle = 'Arrival time calculated as time from unit dispatch to arrival.',
    x = 'Call Priority',
    y = 'Arrival Time (minutes)',
    color = 'Call Priority',
    fill = 'Call Priority'
  ) +
  annotate(
    geom = "label",
    x = 1, 
    y = 240,
    label = paste("ANOVA p =", signif(p_val_anova, 3)),
    color = "black",   # text color
    fill = "white",    # background fill
    hjust = 0,
    size = 4
  ) +
  theme_minimal()

```

-   need to fix subtitle

-   re-assess if this is a good visual or not

```{r}
results
```

```{r}
data |>
  ggplot(
    aes(x = agency, y = secs_to_arrv / 60, color = agency)
  ) + geom_violin(
    aes(fill = agency, fill = after_scale(colorspace::lighten(fill, .5))),
    size = 1.2, bw = .2
  ) +
  coord_cartesian(ylim = c(0, 180)) +  # optional: restrict y-axis instead
  scale_y_continuous(breaks = seq(0, 180, by = 20))
```

```{r}
data |>
  ggplot(
    aes(x = agency, y = secs_to_arrv / 60, color = agency)
  ) + ggdist::stat_halfeye(
    aes(fill = agency, fill = after_scale(colorspace::lighten(fill, .7)))
  ) +
  coord_cartesian(ylim = c(0, 180)) +  # optional: restrict y-axis instead
  scale_y_continuous(breaks = seq(0, 180, by = 20))
```

```{r}
data |>
  ggplot(
    aes(x = agency, y = secs_to_arrv / 60, color = agency)
  ) + geom_point(size = 5, alpha = .33)
  ) +
  coord_cartesian(ylim = c(0, 180)) +  # optional: restrict y-axis instead
  scale_y_continuous(breaks = seq(0, 180, by = 20))
```

```{r}
data |>
  ggplot(
    aes(x = agency, y = secs_to_arrv / 60, color = agency)
  ) + geom_point(shape = 95, size = 20, alpha = .33)
  ) +
  coord_cartesian(ylim = c(0, 180)) +  # optional: restrict y-axis instead
  scale_y_continuous(breaks = seq(0, 180, by = 20))
```

```{r}
data |>
  ggplot(
    aes(x = agency, y = secs_to_arrv / 60, color = agency)
  ) + geom_jitter(size = 7, alpha = .5)
  ) +
  coord_cartesian(ylim = c(0, 180)) +  # optional: restrict y-axis instead
  scale_y_continuous(breaks = seq(0, 180, by = 20))
```

```{r}
data |>
  ggplot(
    aes(x = agency, y = secs_to_arrv / 60, color = agency)
  ) + ggdist::stat_dots(position = position_nudge(x = -.25)) +
  coord_cartesian(ylim = c(0, 180)) +  # optional: restrict y-axis instead
  scale_y_continuous(breaks = seq(0, 180, by = 20))
```

```{r}
data |>
  ggplot(
    aes(x = agency, y = secs_to_arrv / 60, color = agency)
  ) +
  geom_violin(
    aes(fill = agency, fill = after_scale(colorspace::lighten(fill, .5))),
    size = 1.2, bw = .2, color = NA
  ) +
  geom_boxplot(
    width = .1, size = 1.2, outlier.shape = NA
  ) +
  stat_summary(
    geom = "point",
    fun = median,
    color = "white",
    size = 5
  ) +
  coord_cartesian(ylim = c(0, 180)) +  # optional: restrict y-axis instead
  scale_y_continuous(breaks = seq(0, 180, by = 20))
```

```{r}
data |>
  ggplot(
    aes(x = agency, y = secs_to_arrv / 60, color = agency)
  ) +
  geom_boxplot(
    width = .2, fill = "white",
    size = 1.5, outlier.shape = NA
  ) +
  ggdist::stat_halfeye(
    adjust = .33, ## bandwidth
    width = .67, 
    color = NA, ## remove slab interval
    position = position_nudge(x = .15)
  ) +
  gghalves::geom_half_point(
    side = "l", 
    range_scale = .3, 
    alpha = .5, size = 3
  ) +
  coord_cartesian(ylim = c(0, 180)) +  # optional: restrict y-axis instead
  scale_y_continuous(breaks = seq(0, 180, by = 20))
```

```{r}
data |> 
  mutate(secs_to_arrv_min = secs_to_arrv / 60) |>
  ggplot(
    aes(
      x = agency,
      y = secs_to_arrv_min,
      fill = agency
    )
  ) + 
  geom_boxplot() +
  coord_cartesian(ylim = c(0, 240)) +
  facet_wrap(~priority)
```

```{r}
data |> 
  mutate(secs_to_arrv_min = secs_to_arrv / 60) |> 
  ggplot(aes(x = agency, y = secs_to_arrv_min, color = agency)) +
  geom_jitter(width = 0.2, alpha = 0.2, size = 0.5) +
  stat_summary(fun = median, geom = "crossbar", width = 0.5, color = "black", fatten = 2) +
  facet_wrap(~priority, nrow = 2) +
  coord_cartesian(ylim = c(0, 60)) +
  labs(
    title = "Individual Arrival Times with Medians by Priority",
    x = "Agency", y = "Arrival Time (minutes)", color = "Agency"
  ) +
  theme_minimal()

```

```{r}
data |> 
  mutate(secs_to_arrv_min = secs_to_arrv / 60) |> 
  ggplot(aes(x = secs_to_arrv_min, color = agency)) +
  stat_ecdf(geom = "step") +
  facet_wrap(~priority, nrow = 2) +
  coord_cartesian(xlim = c(0, 60)) +
  labs(
    title = "Cumulative Arrival Time Distributions by Priority",
    x = "Arrival Time (minutes)", y = "Proportion of Calls", color = "Agency"
  ) +
  theme_minimal()

```

```{r}
data |> 
  mutate(secs_to_arrv_min = secs_to_arrv / 60,
         priority = factor(priority, levels = c("P", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) |> 
  ggplot(aes(x = priority, y = secs_to_arrv_min, fill = agency)) +
  geom_violin(position = position_dodge(width = 0.9), alpha = 0.6, trim = FALSE) +
  geom_boxplot(width = 0.1, position = position_dodge(width = 0.9), outlier.shape = NA, alpha = 0.7) +
  labs(
    title = "Arrival Time Distributions by Priority and Agency",
    x = "Call Priority", y = "Arrival Time (minutes)", fill = "Agency"
  ) +
  coord_cartesian(ylim = c(0, 60)) +
  theme_minimal()

```

```{r}
data |> 
  mutate(secs_to_arrv_min = secs_to_arrv / 60,
         priority = factor(priority, levels = c("P", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) |> 
  ggplot(aes(x = priority, y = secs_to_arrv_min, fill = agency)) +
  geom_boxplot(position = position_dodge(width = 0.8), outlier.alpha = 0.2) +
  labs(
    title = "Arrival Times by Priority and Agency",
    x = "Call Priority", y = "Arrival Time (minutes)", fill = "Agency"
  ) +
  coord_cartesian(ylim = c(0, 60)) +
  theme_minimal()

```

```{r}
data |> 
  mutate(
    min_to_arrv = secs_to_arrv / 60,
    priority = factor(priority, levels = c("P", "1", "2", "3", "4", "5", "6", "7", "8", "9"))
  ) |> 
  filter(!is.na(priority)) |>  # Remove rows with NA in priority
  group_by(priority, agency) |> 
  summarize(
    mean_arrival = mean(min_to_arrv, na.rm = TRUE), 
    .groups = "drop"
  ) |> 
  ggplot(aes(x = priority, y = mean_arrival, group = agency, color = agency)) +
  geom_line(size = 1.2) +
  geom_point(size = 3) +
  labs(
    title = "Mean Arrival Time by Priority and Agency",
    x = "Call Priority",
    y = "Mean Arrival Time (minutes)",
    color = "Agency"
  ) +
  theme_minimal()


```

```{r}
sig_priorities <- results |>
  filter(str_detect(test, "t_test_priority_"), p_value < 0.05) |>
  mutate(priority = str_remove(test, "t_test_priority_"),
         priority = if_else(priority == "P", "P", priority),
         priority = factor(priority, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "P")))

means <- data |> 
  mutate(
    mins_to_arrv = secs_to_arrv / 60,
    priority = factor(priority, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "P"))
  ) |> 
  filter(!is.na(priority)) |> 
  group_by(priority, agency) |> 
  summarize(mean_arrival = mean(mins_to_arrv, na.rm = TRUE), .groups = "drop")

annotate_points <- means |> 
  filter(priority %in% sig_priorities$priority) |> 
  group_by(priority) |> 
  slice_max(mean_arrival, n = 1) |>  # get the higher agency for each priority
  ungroup() |> 
  mutate(marker = "*")  # or use "†", "★", etc.

ggplot(means, aes(x = priority, y = mean_arrival, group = agency, color = agency)) +
  geom_line(size = 1.2) +
  geom_point(size = 3) +
  geom_text(
    data = annotate_points,
    aes(label = marker),
    inherit.aes = TRUE,
    vjust = -1,
    size = 5,
    color = "black"
  ) +
  labs(
    title = "Mean Arrival Time by Priority and Agency",
    x = "Call Priority",
    y = "Mean Arrival Time (minutes)",
    color = "Agency"
  ) +
  coord_cartesian(ylim = c(0, 480)) +
  theme_minimal()

```
